var filename,as_base64,as_binary,openFile=function(e,t,r){var n=e.target,i=new FileReader;i.onload=function(){var n=i.result;-1!==n.indexOf("ï¿½")&&(openFile(e,t,r="as_base64"),document.getElementById(t).setAttribute("readonly",!0),document.getElementById(t).setAttribute("title","Unsigned character was been found in the source code.\nNow this content was been uploaded as base64.\nYou can decode original source of this - from base64.\n\nDouble-click here to discard readonly attribute."));var a=document.getElementById(t);"as_base64"===r?a.value=n.split(";base64,")[1]:a.value=n},void 0===n.files[0]?document.getElementById("filename_temp").innerHTML="filename.txt":document.getElementById("filename_temp").innerHTML=n.files[0].name,"as_base64"===r?(i.readAsDataURL(n.files[0]),document.getElementById("filename_temp").innerHTML+=".base64.txt"):i.readAsText(n.files[0])};function isBase64(e){try{return btoa(atob(e))==e}catch(t){return!1}}function set_file_name(e,t,r){}function linkText(e,t,r,n){t.style.display="block",updateLink(e,t);var i=document.getElementById("filename_temp");function a(r,n){updateLink(e,t,r,n)}return null===i?console.log("no element with ID "+filename_temp):filename_temp=i.innerHTML,null===t&&console.log("no element with ID "+t),void 0===n?isBase64(e.value)&&-1==filename_temp.indexOf(".base64.txt")&&(filename_temp+=".base64.txt"):isBase64(e.value)&&-1!=filename_temp.indexOf(".base64.txt")&&(filename_temp=filename_temp.replace(".base64.txt","")),e.addEventListener("input",a(n,r)),a}function updateLink(e,t,r,n){if(t.hidden=!e.value,"as_binary"===r?isBase64(e.value)?t.href="data:application/octet-stream;base64,"+encodeURI(e.value):t.href="data:application/octet-stream;charset=utf-8,"+encodeURI(e.value):t.href="data:text/plain;charset=UTF-8,"+encodeURI(e.value),t.onclick="",t.style.display=""===e.value?"none":"block","sign"===n){var i="signed";t.download=filename_temp+"."+i+".txt"}else if("verify"===n){var i="verified";t.download=-1===filename_temp.indexOf(".signed")?"as_binary"===r?isBase64(e.value)?"raw-message.txt":"raw-message.bin.txt":isBase64(e.value)?"raw-message.base64.txt":"raw-message.txt":filename_temp.split(".signed",1)[0]}else if("encrypt"===n){var i="encryted";t.download=filename_temp+".encrypted.txt"}else if("decrypt"===n){var i="decrypted";t.download=-1===filename_temp.indexOf(".encrypted")?"as_binary"===r?isBase64(e.value)?"Raw_code.txt":"Raw_code.bin.txt":isBase64(e.value)?"Raw_code.base64.txt":"Raw_code.txt":filename_temp.split(".encrypted",1)[0]}else if("sign+encrypt"===n){var i="signed and encrypted";t.download=filename_temp+".encrypted_and_signed.txt"}else if("decrypt+verify"===n){var i="decrypted and verified";t.download=-1===filename_temp.indexOf(".encrypted_and_signed")?-1===filename_temp.indexOf(".signed")?"as_binary"===r?isBase64(e.value)?"Raw_code.txt":"Raw_code.bin.txt":isBase64(e.value)?"Raw_code.base64.txt":"Raw_code.txt":filename_temp.split(".signed",1)[0]:filename_temp.split(".encrypted_and_signed.txt",1)[0]}var a="Filename is: "+t.getAttribute("download");void 0===r?t.setAttribute("title","Download "+i+" message as text. \n"+a):t.setAttribute("title","Download "+i+" message as binary. \nIf in textarea base64 encoded file content - you can download this as binary RAW-data.\n"+a)}$(document).ready(function(){$("#algorithm").change(function(){populateKeysizeDropdown(),$("#bitlength").removeAttr("disabled")}),$("form#keygen").submit(function(e){e.preventDefault(),genKeyPair()}),$("#download_priv_key").on("click",downloadPrivKey),$("#download_pub_key").on("click",downloadPubKey),$("#name, #email, #comments, #algorithm, #bitlength, #expire, #passphrase").tooltip({trigger:"hover",placement:"top",container:"body"}),$('[data-toggle="popover"]').popover({placement:"top"}),$("#sign-plain-text").dblclick(function(){$(this).removeAttr("title"),$(this).removeAttr("readonly")}),$("#Unverified-plain-text").dblclick(function(){$(this).removeAttr("title"),$(this).removeAttr("readonly")}),$("#signencrypt-plain-text").dblclick(function(){$(this).removeAttr("title"),$(this).removeAttr("readonly")}),$("#decryption-encrypted-text").dblclick(function(){$(this).removeAttr("title"),$(this).removeAttr("readonly")}),$("#sign-button").click(function(){var e=$("#sign-plain-text"),t=$("#signed-text"),r=$("#sign-private-key"),n=$("#sign-passphrase");$("#vrAlert_signed").empty();var i=$("#vrError").clone();kbpgp.KeyManager.import_from_armored_pgp({armored:r.val()},function(r,a){r||(a.is_pgp_locked()?a.unlock_pgp({passphrase:n.val()},function(r){if(r)console.log("Error"+r),i.find("#vrAddrLabel").html(r),i.appendTo($("#vrAlert_signed"));else{console.log("Loaded private key with passphrase");var n={msg:e.val(),sign_with:a};kbpgp.box(n,function(e,r,n){console.log(e,r,n),t.val(r),linkText(document.getElementById("signed-text"),document.getElementById("download-signed-text"),"sign")}),(i=$("#vrSuccess").clone()).find("#vrAddrLabel").html("Message successfully signed."),i.appendTo($("#vrAlert_signed"))}}):(console.log("Loaded private key w/o passphrase"),i.find("#vrAddrLabel").html("Invalid private key or password."),i.appendTo($("#vrAlert_signed"))))})}),$("#verify-signature").click(function(){var e=$("#Unverified-plain-text"),t=$("#pure-text"),r=$("#Signer-public-key");$("#vrAlert").empty();var n=$("#vrError").clone();kbpgp.KeyManager.import_from_armored_pgp({armored:r.val()},function(r,i){if(r)console.log("Error!"),n.find("#vrAddrLabel").html("Message failed to verify!"),n.appendTo($("#vrAlert"));else{console.log("receiver's public key is loaded"),e.val();var a=new kbpgp.keyring.KeyRing;a.add_key_manager(i),console.log("verify function, key-ring...",a),kbpgp.unbox({keyfetch:a,armored:e.val()},function(e,r){if(null!=e)return n.find("#vrAddrLabel").html("Message failed to verify! See console.log (F12-button)"+e),n.appendTo($("#vrAlert")),console.log("Problem: "+e);var a=r[0].toString();console.log("Clear-sig, message without signature: "+a),t.val(a),linkText(document.getElementById("pure-text"),document.getElementById("download-pure-text"),"verify"),linkText(document.getElementById("pure-text"),document.getElementById("download_verified_as_binary"),"verify","as_binary");var d=km=null;if((d=r[0].get_data_signer())&&(km=d.get_key_manager()),km){console.log("Signed by PGP fingerprint");var l=i.get_pgp_fingerprint().toString("hex"),o=km.get_pgp_fingerprint().toString("hex");console.log(o,l===o?"and verified.":"and failed to verify."),(n=l===o?$("#vrSuccess").clone():$("#vrWarning").clone()).find("#vrAddrLabel").html("Message signature is verified with fingerprint: "+l)}n.appendTo($("#vrAlert"))})}})}),$("#signencrypt-button").click(function(){var e=$("#signencrypt-plain-text"),t=$("#signencrypt-text"),r=$("#signencrypt-private-key"),n=$("#signencrypt-passphrase"),i=$("#signencrypt-receivers-public-key");$("#vrAlert3").empty();var a=$("#vrError").clone();kbpgp.KeyManager.import_from_armored_pgp({armored:r.val()},function(r,d){!r&&d.is_pgp_locked()&&d.unlock_pgp({passphrase:n.val()},function(e){e?((a=$("#vrError").clone()).find("#vrAddrLabel").html("Signing error: Incorrect password for private key."),a.appendTo($("#vrAlert3"))):console.log("Loaded private key with passphrase")}),kbpgp.KeyManager.import_from_armored_pgp({armored:i.val()},function(r,n){if(r)console.log("Error!"),(a=$("#vrError").clone()).find("#vrAddrLabel").html("Encryption error. Incorrect public key."),a.appendTo($("#vrAlert3"));else{console.log("receiver's public key is loaded"),console.log(n);var i={msg:e.val(),sign_with:d,encrypt_for:n};kbpgp.box(i,function(e,r,n){console.log(e,r,n),t.val(r),null===d?(linkText(document.getElementById("signencrypt-text"),document.getElementById("download-signencrypt-text"),"encrypt"),(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Message successfully encrypted, but not signed. Private key not loaded.")):(linkText(document.getElementById("signencrypt-text"),document.getElementById("download-signencrypt-text"),"sign+encrypt"),(a=$("#vrSuccess").clone()).find("#vrAddrLabel").html("Message successfully encrypted and signed.")),a.appendTo($("#vrAlert3"))})}})})}),$("#decryption-button").click(function(){var e=$("#decryption-encrypted-text"),t=$("#decryption-decrypted-text"),r=$("#decryption-private-key"),n=$("#decryption-passphrase"),i=$("#signer_public_key");$("#vrAlert2").empty();var a=$("#vrError").clone();kbpgp.KeyManager.import_from_armored_pgp({armored:r.val()},function(r,d){r?(console.log("Error in decryption import"),a.find("#vrAddrLabel").html("Error in decryption import"),a.appendTo($("#vrAlert2"))):d.is_pgp_locked()?d.unlock_pgp({passphrase:n.val()},function(r){if(r)console.log("Error in decryption unlock pgp"),(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Incorrect password for private key"),a.appendTo($("#vrAlert2"));else{console.log("Loaded private key with passphrase");var n=new kbpgp.keyring.KeyRing;console.log("ring",n),n.add_key_manager(d),kbpgp.KeyManager.import_from_armored_pgp({armored:i.val()},function(r,i){r?kbpgp.unbox({keyfetch:n,armored:e.val()},function(e,r){if(null!=e)a.find("#vrAddrLabel").html("this... Message failed to verify! <br>"+e),a.appendTo($("#vrAlert2")),console.log(e);else{var n=r[0].toString();console.log("decrypted message: "+n),t.val(n);var l=km=null;if((l=r[0].get_data_signer())&&(km=l.get_key_manager()),km){console.log("Signed by PGP fingerprint"),console.log("senderPUB",i);var o=null===i?d.get_pgp_fingerprint().toString("hex"):i.get_pgp_fingerprint().toString("hex"),s=km.get_pgp_fingerprint().toString("hex");console.log(s,o===s?"and verified.":"and failed to verify."),o===s?(a=$("#vrSuccess").clone()).find("#vrAddrLabel").html("Message is decrypted by priv, and signature is verified successfully by pub - with fingerprint "+o):(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Incorrect fingerprint "+o),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download-decrypted-text"),"decrypt+verify"),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download_decrypt_verify_as_binary"),"decrypt+verify","as_binary")}else(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Decrypted, but incorrect fingerprint - signature not verified.<br>If this message encrypted without signature - ignore this message."),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download-decrypted-text"),"decrypt"),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download_decrypt_verify_as_binary"),"decrypt","as_binary");a.appendTo($("#vrAlert2"))}}):(console.log("Sender's public key is loaded"),n.add_key_manager(i),kbpgp.unbox({keyfetch:n,armored:e.val()},function(e,r){if(null!=e)a.find("#vrAddrLabel").html("Message failed to verify! <br>"+e),a.appendTo($("#vrAlert2")),console.log(e);else{var n=r[0].toString();console.log("decrypted message: "+n),t.val(n);var d=km=null;if((d=r[0].get_data_signer())&&(km=d.get_key_manager()),km){console.log("Signed by PGP fingerprint");var l=i.get_pgp_fingerprint().toString("hex"),o=km.get_pgp_fingerprint().toString("hex");console.log(o,l===o?"and verified.":"and failed to verify."),l===o?(a=$("#vrSuccess").clone()).find("#vrAddrLabel").html("Message is decrypted by priv, and signature is verified successfully by pub - with fingerprint "+l):(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Incorrect fingerprint "+l),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download-decrypted-text"),"decrypt+verify"),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download_decrypt_verify_as_binary"),"decrypt+verify","as_binary")}else(a=$("#vrWarning").clone()).find("#vrAddrLabel").html("Decrypted, but incorrect fingerprint - signature not verified.<br>If this message encrypted without signature - ignore this message."),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download-decrypted-text"),"decrypt"),linkText(document.getElementById("decryption-decrypted-text"),document.getElementById("download_decrypt_verify_as_binary"),"decrypt","as_binary");a.appendTo($("#vrAlert2"))}}))})}}):(console.log("Loaded private key w/o passphrase"),a.find("#vrAddrLabel").html("Invalid private key or password."),a.appendTo($("#vrAlert2")))})})});